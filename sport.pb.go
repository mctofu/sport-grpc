// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sport.proto

package sportgrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Button int32

const (
	Button_BUTTON_RESET Button = 0
	Button_BUTTON_F1    Button = 1
	Button_BUTTON_F2    Button = 2
	Button_BUTTON_F3    Button = 3
	Button_BUTTON_PLUS  Button = 4
	Button_BUTTON_MINUS Button = 5
)

var Button_name = map[int32]string{
	0: "BUTTON_RESET",
	1: "BUTTON_F1",
	2: "BUTTON_F2",
	3: "BUTTON_F3",
	4: "BUTTON_PLUS",
	5: "BUTTON_MINUS",
}

var Button_value = map[string]int32{
	"BUTTON_RESET": 0,
	"BUTTON_F1":    1,
	"BUTTON_F2":    2,
	"BUTTON_F3":    3,
	"BUTTON_PLUS":  4,
	"BUTTON_MINUS": 5,
}

func (x Button) String() string {
	return proto.EnumName(Button_name, int32(x))
}

func (Button) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{0}
}

type PerformanceType int32

const (
	PerformanceType_PERFORMANCE_TYPE_SPEED       PerformanceType = 0
	PerformanceType_PERFORMANCE_TYPE_POWER       PerformanceType = 1
	PerformanceType_PERFORMANCE_TYPE_CADENCE     PerformanceType = 2
	PerformanceType_PERFORMANCE_TYPE_HEART_RATE  PerformanceType = 3
	PerformanceType_PERFORMANCE_TYPE_CALIBRATION PerformanceType = 4
)

var PerformanceType_name = map[int32]string{
	0: "PERFORMANCE_TYPE_SPEED",
	1: "PERFORMANCE_TYPE_POWER",
	2: "PERFORMANCE_TYPE_CADENCE",
	3: "PERFORMANCE_TYPE_HEART_RATE",
	4: "PERFORMANCE_TYPE_CALIBRATION",
}

var PerformanceType_value = map[string]int32{
	"PERFORMANCE_TYPE_SPEED":       0,
	"PERFORMANCE_TYPE_POWER":       1,
	"PERFORMANCE_TYPE_CADENCE":     2,
	"PERFORMANCE_TYPE_HEART_RATE":  3,
	"PERFORMANCE_TYPE_CALIBRATION": 4,
}

func (x PerformanceType) String() string {
	return proto.EnumName(PerformanceType_name, int32(x))
}

func (PerformanceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{1}
}

type DataRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{0}
}

func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (m *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(m, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

type LoadRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	TargetLoad           int32    `protobuf:"varint,2,opt,name=target_load,json=targetLoad,proto3" json:"target_load,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadRequest) Reset()         { *m = LoadRequest{} }
func (m *LoadRequest) String() string { return proto.CompactTextString(m) }
func (*LoadRequest) ProtoMessage()    {}
func (*LoadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{1}
}

func (m *LoadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadRequest.Unmarshal(m, b)
}
func (m *LoadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadRequest.Marshal(b, m, deterministic)
}
func (m *LoadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadRequest.Merge(m, src)
}
func (m *LoadRequest) XXX_Size() int {
	return xxx_messageInfo_LoadRequest.Size(m)
}
func (m *LoadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadRequest proto.InternalMessageInfo

func (m *LoadRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *LoadRequest) GetTargetLoad() int32 {
	if m != nil {
		return m.TargetLoad
	}
	return 0
}

type LoadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadResponse) Reset()         { *m = LoadResponse{} }
func (m *LoadResponse) String() string { return proto.CompactTextString(m) }
func (*LoadResponse) ProtoMessage()    {}
func (*LoadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{2}
}

func (m *LoadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadResponse.Unmarshal(m, b)
}
func (m *LoadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadResponse.Marshal(b, m, deterministic)
}
func (m *LoadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadResponse.Merge(m, src)
}
func (m *LoadResponse) XXX_Size() int {
	return xxx_messageInfo_LoadResponse.Size(m)
}
func (m *LoadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadResponse proto.InternalMessageInfo

type RecalibrateRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecalibrateRequest) Reset()         { *m = RecalibrateRequest{} }
func (m *RecalibrateRequest) String() string { return proto.CompactTextString(m) }
func (*RecalibrateRequest) ProtoMessage()    {}
func (*RecalibrateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{3}
}

func (m *RecalibrateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecalibrateRequest.Unmarshal(m, b)
}
func (m *RecalibrateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecalibrateRequest.Marshal(b, m, deterministic)
}
func (m *RecalibrateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecalibrateRequest.Merge(m, src)
}
func (m *RecalibrateRequest) XXX_Size() int {
	return xxx_messageInfo_RecalibrateRequest.Size(m)
}
func (m *RecalibrateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecalibrateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecalibrateRequest proto.InternalMessageInfo

func (m *RecalibrateRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type RecalibrateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecalibrateResponse) Reset()         { *m = RecalibrateResponse{} }
func (m *RecalibrateResponse) String() string { return proto.CompactTextString(m) }
func (*RecalibrateResponse) ProtoMessage()    {}
func (*RecalibrateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{4}
}

func (m *RecalibrateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecalibrateResponse.Unmarshal(m, b)
}
func (m *RecalibrateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecalibrateResponse.Marshal(b, m, deterministic)
}
func (m *RecalibrateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecalibrateResponse.Merge(m, src)
}
func (m *RecalibrateResponse) XXX_Size() int {
	return xxx_messageInfo_RecalibrateResponse.Size(m)
}
func (m *RecalibrateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecalibrateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecalibrateResponse proto.InternalMessageInfo

type SportData struct {
	DeviceId             string           `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ControlData          *ControlData     `protobuf:"bytes,2,opt,name=control_data,json=controlData,proto3" json:"control_data,omitempty"`
	PerformanceData      *PerformanceData `protobuf:"bytes,3,opt,name=performance_data,json=performanceData,proto3" json:"performance_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SportData) Reset()         { *m = SportData{} }
func (m *SportData) String() string { return proto.CompactTextString(m) }
func (*SportData) ProtoMessage()    {}
func (*SportData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{5}
}

func (m *SportData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SportData.Unmarshal(m, b)
}
func (m *SportData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SportData.Marshal(b, m, deterministic)
}
func (m *SportData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SportData.Merge(m, src)
}
func (m *SportData) XXX_Size() int {
	return xxx_messageInfo_SportData.Size(m)
}
func (m *SportData) XXX_DiscardUnknown() {
	xxx_messageInfo_SportData.DiscardUnknown(m)
}

var xxx_messageInfo_SportData proto.InternalMessageInfo

func (m *SportData) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *SportData) GetControlData() *ControlData {
	if m != nil {
		return m.ControlData
	}
	return nil
}

func (m *SportData) GetPerformanceData() *PerformanceData {
	if m != nil {
		return m.PerformanceData
	}
	return nil
}

type ControlData struct {
	Pressed              []Button `protobuf:"varint,1,rep,packed,name=pressed,proto3,enum=sportgrpc.Button" json:"pressed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlData) Reset()         { *m = ControlData{} }
func (m *ControlData) String() string { return proto.CompactTextString(m) }
func (*ControlData) ProtoMessage()    {}
func (*ControlData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{6}
}

func (m *ControlData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlData.Unmarshal(m, b)
}
func (m *ControlData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlData.Marshal(b, m, deterministic)
}
func (m *ControlData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlData.Merge(m, src)
}
func (m *ControlData) XXX_Size() int {
	return xxx_messageInfo_ControlData.Size(m)
}
func (m *ControlData) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlData.DiscardUnknown(m)
}

var xxx_messageInfo_ControlData proto.InternalMessageInfo

func (m *ControlData) GetPressed() []Button {
	if m != nil {
		return m.Pressed
	}
	return nil
}

type PerformanceData struct {
	Type                 PerformanceType `protobuf:"varint,1,opt,name=type,proto3,enum=sportgrpc.PerformanceType" json:"type,omitempty"`
	Value                float64         `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PerformanceData) Reset()         { *m = PerformanceData{} }
func (m *PerformanceData) String() string { return proto.CompactTextString(m) }
func (*PerformanceData) ProtoMessage()    {}
func (*PerformanceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f756dc6779bf654, []int{7}
}

func (m *PerformanceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceData.Unmarshal(m, b)
}
func (m *PerformanceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceData.Marshal(b, m, deterministic)
}
func (m *PerformanceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceData.Merge(m, src)
}
func (m *PerformanceData) XXX_Size() int {
	return xxx_messageInfo_PerformanceData.Size(m)
}
func (m *PerformanceData) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceData.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceData proto.InternalMessageInfo

func (m *PerformanceData) GetType() PerformanceType {
	if m != nil {
		return m.Type
	}
	return PerformanceType_PERFORMANCE_TYPE_SPEED
}

func (m *PerformanceData) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterEnum("sportgrpc.Button", Button_name, Button_value)
	proto.RegisterEnum("sportgrpc.PerformanceType", PerformanceType_name, PerformanceType_value)
	proto.RegisterType((*DataRequest)(nil), "sportgrpc.DataRequest")
	proto.RegisterType((*LoadRequest)(nil), "sportgrpc.LoadRequest")
	proto.RegisterType((*LoadResponse)(nil), "sportgrpc.LoadResponse")
	proto.RegisterType((*RecalibrateRequest)(nil), "sportgrpc.RecalibrateRequest")
	proto.RegisterType((*RecalibrateResponse)(nil), "sportgrpc.RecalibrateResponse")
	proto.RegisterType((*SportData)(nil), "sportgrpc.SportData")
	proto.RegisterType((*ControlData)(nil), "sportgrpc.ControlData")
	proto.RegisterType((*PerformanceData)(nil), "sportgrpc.PerformanceData")
}

func init() {
	proto.RegisterFile("sport.proto", fileDescriptor_4f756dc6779bf654)
}

var fileDescriptor_4f756dc6779bf654 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xdf, 0x4f, 0xdb, 0x30,
	0x10, 0x6e, 0x68, 0x0b, 0xf4, 0x52, 0x5a, 0xcf, 0x63, 0xac, 0x2a, 0x6c, 0x54, 0x79, 0xaa, 0x98,
	0x54, 0x8d, 0xf2, 0xb4, 0x89, 0x97, 0xfe, 0x30, 0x5a, 0xb5, 0x92, 0x46, 0x4e, 0x2a, 0xb4, 0xa7,
	0xc8, 0x24, 0x1e, 0xea, 0xd4, 0xd5, 0x99, 0xe3, 0x22, 0xf1, 0x2f, 0xf1, 0x17, 0xed, 0xcf, 0x99,
	0xea, 0x04, 0x70, 0x57, 0x98, 0xf6, 0xf8, 0xdd, 0xdd, 0xf7, 0xf9, 0xbb, 0xf3, 0x1d, 0xd8, 0x69,
	0x22, 0xa4, 0xea, 0x24, 0x52, 0x28, 0x81, 0x2b, 0x1a, 0xdc, 0xc8, 0x24, 0x72, 0xf6, 0xc0, 0x1e,
	0x32, 0xc5, 0x28, 0xff, 0xb5, 0xe4, 0xa9, 0x72, 0xbe, 0x82, 0x3d, 0x16, 0x2c, 0xce, 0x21, 0x3e,
	0x84, 0x4a, 0xcc, 0x6f, 0x67, 0x11, 0x0f, 0x67, 0x71, 0xc3, 0x6a, 0x59, 0xed, 0x0a, 0xdd, 0xcd,
	0x02, 0xa3, 0x18, 0x1f, 0x83, 0xad, 0x98, 0xbc, 0xe1, 0x2a, 0x9c, 0x0b, 0x16, 0x37, 0xb6, 0x5a,
	0x56, 0xbb, 0x4c, 0x21, 0x0b, 0xad, 0x44, 0x9c, 0x1a, 0x54, 0x33, 0xb1, 0x34, 0x11, 0x8b, 0x94,
	0x3b, 0xa7, 0x80, 0x29, 0x8f, 0xd8, 0x7c, 0x76, 0x2d, 0x99, 0xe2, 0xff, 0xf3, 0x86, 0xf3, 0x06,
	0x5e, 0xaf, 0x51, 0x72, 0xa5, 0x7b, 0x0b, 0x2a, 0xfe, 0xaa, 0x87, 0x95, 0xf7, 0x7f, 0xbb, 0xfc,
	0x04, 0xd5, 0x48, 0x2c, 0x94, 0x14, 0xf3, 0x30, 0x66, 0x8a, 0x69, 0x9b, 0x76, 0xf7, 0xa0, 0xf3,
	0x38, 0x82, 0xce, 0x20, 0x4b, 0xeb, 0x31, 0xd8, 0xd1, 0x13, 0xc0, 0x04, 0x50, 0xc2, 0xe5, 0x77,
	0x21, 0x7f, 0xb2, 0x45, 0xc4, 0x33, 0x7a, 0x51, 0xd3, 0x9b, 0x06, 0xdd, 0x7b, 0x2a, 0xd1, 0x12,
	0xf5, 0x64, 0x3d, 0xe0, 0x7c, 0x06, 0xdb, 0x78, 0x02, 0x7f, 0x80, 0x9d, 0x44, 0xf2, 0x34, 0xe5,
	0x2b, 0xaf, 0xc5, 0x76, 0xad, 0xfb, 0xca, 0x10, 0xeb, 0x2f, 0x95, 0x12, 0x0b, 0xfa, 0x50, 0xe1,
	0x5c, 0x41, 0xfd, 0x2f, 0x7d, 0xdc, 0x81, 0x92, 0xba, 0x4b, 0xb8, 0x6e, 0xb4, 0xf6, 0x92, 0x93,
	0xe0, 0x2e, 0xe1, 0x54, 0xd7, 0xe1, 0x7d, 0x28, 0xdf, 0xb2, 0xf9, 0x92, 0xeb, 0xce, 0x2d, 0x9a,
	0x81, 0x93, 0x1f, 0xb0, 0x9d, 0xbd, 0x85, 0x11, 0x54, 0xfb, 0xd3, 0x20, 0x98, 0xb8, 0x21, 0x25,
	0x3e, 0x09, 0x50, 0x01, 0xef, 0x41, 0x25, 0x8f, 0x5c, 0x9c, 0x22, 0xcb, 0x84, 0x5d, 0xb4, 0x65,
	0xc2, 0x33, 0x54, 0xc4, 0x75, 0xb0, 0x73, 0xe8, 0x8d, 0xa7, 0x3e, 0x2a, 0x19, 0x7a, 0x97, 0x23,
	0x77, 0xea, 0xa3, 0xf2, 0xc9, 0xbd, 0xb5, 0xd6, 0xc5, 0xca, 0x1b, 0x6e, 0xc2, 0x81, 0x47, 0xe8,
	0xc5, 0x84, 0x5e, 0xf6, 0xdc, 0x01, 0x09, 0x83, 0x6f, 0x1e, 0x09, 0x7d, 0x8f, 0x90, 0x21, 0x2a,
	0x3c, 0x9b, 0xf3, 0x26, 0x57, 0x84, 0x22, 0x0b, 0x1f, 0x41, 0x63, 0x23, 0x37, 0xe8, 0x0d, 0x89,
	0x3b, 0x20, 0x68, 0x0b, 0x1f, 0xc3, 0xe1, 0x46, 0xf6, 0x0b, 0xe9, 0xd1, 0x20, 0xa4, 0xbd, 0x80,
	0xa0, 0x22, 0x6e, 0xc1, 0xd1, 0x33, 0xf4, 0xf1, 0xa8, 0x4f, 0x7b, 0xc1, 0x68, 0xe2, 0xa2, 0x52,
	0xf7, 0xb7, 0x05, 0x90, 0x7f, 0xd7, 0x9c, 0x4b, 0x7c, 0x0e, 0xbb, 0x94, 0xb3, 0x58, 0x4f, 0xde,
	0x5c, 0x1a, 0xe3, 0x68, 0x9a, 0xfb, 0x46, 0xfc, 0x71, 0x2b, 0x9d, 0xc2, 0x47, 0x0b, 0x9f, 0xc3,
	0x8e, 0x9f, 0x1d, 0xc3, 0x1a, 0xd9, 0x38, 0xb1, 0xe6, 0xdb, 0x8d, 0x78, 0xbe, 0xe3, 0x05, 0xec,
	0x82, 0x6d, 0x2c, 0x3f, 0x7e, 0x67, 0x54, 0x6e, 0xde, 0x51, 0xf3, 0xfd, 0x4b, 0xe9, 0x07, 0xbd,
	0xeb, 0x6d, 0x7d, 0xfd, 0x67, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf9, 0x9b, 0x86, 0xea, 0x0c,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	ReadData(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (Controller_ReadDataClient, error)
	SetLoad(ctx context.Context, in *LoadRequest, opts ...grpc.CallOption) (*LoadResponse, error)
	Recalibrate(ctx context.Context, in *RecalibrateRequest, opts ...grpc.CallOption) (*RecalibrateResponse, error)
}

type controllerClient struct {
	cc grpc.ClientConnInterface
}

func NewControllerClient(cc grpc.ClientConnInterface) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) ReadData(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (Controller_ReadDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[0], "/sportgrpc.Controller/ReadData", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerReadDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_ReadDataClient interface {
	Recv() (*SportData, error)
	grpc.ClientStream
}

type controllerReadDataClient struct {
	grpc.ClientStream
}

func (x *controllerReadDataClient) Recv() (*SportData, error) {
	m := new(SportData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) SetLoad(ctx context.Context, in *LoadRequest, opts ...grpc.CallOption) (*LoadResponse, error) {
	out := new(LoadResponse)
	err := c.cc.Invoke(ctx, "/sportgrpc.Controller/SetLoad", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) Recalibrate(ctx context.Context, in *RecalibrateRequest, opts ...grpc.CallOption) (*RecalibrateResponse, error) {
	out := new(RecalibrateResponse)
	err := c.cc.Invoke(ctx, "/sportgrpc.Controller/Recalibrate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	ReadData(*DataRequest, Controller_ReadDataServer) error
	SetLoad(context.Context, *LoadRequest) (*LoadResponse, error)
	Recalibrate(context.Context, *RecalibrateRequest) (*RecalibrateResponse, error)
}

// UnimplementedControllerServer can be embedded to have forward compatible implementations.
type UnimplementedControllerServer struct {
}

func (*UnimplementedControllerServer) ReadData(req *DataRequest, srv Controller_ReadDataServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadData not implemented")
}
func (*UnimplementedControllerServer) SetLoad(ctx context.Context, req *LoadRequest) (*LoadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLoad not implemented")
}
func (*UnimplementedControllerServer) Recalibrate(ctx context.Context, req *RecalibrateRequest) (*RecalibrateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Recalibrate not implemented")
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_ReadData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).ReadData(m, &controllerReadDataServer{stream})
}

type Controller_ReadDataServer interface {
	Send(*SportData) error
	grpc.ServerStream
}

type controllerReadDataServer struct {
	grpc.ServerStream
}

func (x *controllerReadDataServer) Send(m *SportData) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_SetLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).SetLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sportgrpc.Controller/SetLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).SetLoad(ctx, req.(*LoadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_Recalibrate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecalibrateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).Recalibrate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sportgrpc.Controller/Recalibrate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).Recalibrate(ctx, req.(*RecalibrateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sportgrpc.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetLoad",
			Handler:    _Controller_SetLoad_Handler,
		},
		{
			MethodName: "Recalibrate",
			Handler:    _Controller_Recalibrate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadData",
			Handler:       _Controller_ReadData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "sport.proto",
}
